.PHONY: clean

ECHO ?= /bin/echo

log_link     = \033[36mLinking\033[0;1m $@\033[0m...
log_compile  = \033[33mCompiling\033[0;1m $<\033[0m...

ifdef V
log_tool     = $1
suppress     =
else
log_tool     = @$(ECHO) -e '$2' && $1
suppress     = @
endif

__link       = $(call log_tool,$(CXX),$(log_link)) $(LDFLAGS_EXTRA) $(LDFLAGS)
__compile    = $(call log_tool,$(CXX),$(log_compile)) $(CXXFLAGS_EXTRA) $(CXXFLAGS)

$(build_dir)/%.o: $(source_dir)/%.cpp
	$(suppress) test -d './$(dir $@)' || mkdir -p './$(dir $@)'
	$(__compile) -c -o '$@' '$<'

$(build_dir)/%.o: $(source_dir)/%.cxx
	$(suppress) test -d './$(dir $@)' || mkdir -p './$(dir $@)'
	$(__compile) -c -o '$@' '$<'

$(build_dir)/%.o: $(source_dir)/%.cc
	$(suppress) test -d './$(dir $@)' || mkdir -p './$(dir $@)'
	$(__compile) -c -o '$@' '$<'


define program_template
$(foreach builddir,$(call get_builddirs,$1),$(call define_builddir,$(builddir)))
$$($1_bin): $$(call program_objects,$1) $$($1_dep)
	$$(suppress) test -d './$(dir $@)' || mkdir -p './$(dir $@)'
	$$(__link) -o '$$@' $$(call program_objects,$1) $$(call program_libs,$1)

.PHONY: __clean_$1
clean: __clean_$1
__clean_$1::
	$$(suppress) rm -f $$($1_bin)
endef

define library_template
$(foreach builddir,$(call get_builddirs,$1),$(call define_builddir,$(builddir)))
$$($1_bin): $$(call program_objects,$1) $$($1_dep)
	$$(suppress) test -d './$(dir $@)' || mkdir -p './$(dir $@)'
	$$(__link) -shared -o '$$@' $$(call program_objects,$1) $$(call program_libs,$1)

.PHONY: __clean_$1
clean: __clean_$1
__clean_$1::
	$$(suppress) rm -f $$($1_bin)
endef

define builddir_template
ifndef __dir_$1
__dir_$1 = 1
-include $1/*.d
.PHONY: __clean_$1
clean: __clean_$1
__clean_$1:
	$(suppress) rm -rf '$1'
endif
endef



program_objects       = $(addprefix $(build_dir)/,$(addsuffix .o,$(basename $($1_src))))
program_libs          = $(addprefix -l,$($1_lib))
define_program        = $(eval $(call program_template,$1))
define_library        = $(eval $(call library_template,$1))
define_builddir       = $(eval $(call builddir_template,$1))
get_builddirs         = $(filter-out ./,$(sort $(dir $(call program_objects,$1))))
