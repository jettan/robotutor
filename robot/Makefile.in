.PHONY: clean

log_link     = \033[36mLinking\033[0;1m $@\033[0m...
log_compile  = \033[33mCompiling\033[0;1m $<\033[0m...

ifdef V
log_tool     = $1
suppress     =
else
log_tool     = @echo '$2' && $1
suppress     = @
endif


$(build_dir)/%.o: $(source_dir)/%.cpp | __build_tree
	$(call log_tool,$(CXX),$(log_compile)) $(CXXFLAGS_EXTRA) $(CXXFLAGS) -c -o '$@' '$<'

$(build_dir)/%.o: $(source_dir)/%.cxx | __build_tree
	$(call log_tool,$(CXX),$(log_compile)) $(CXXFLAGS_EXTRA) $(CXXFLAGS) -c -o '$@' '$<'

$(build_dir)/%.o: $(source_dir)/%.cc | __build_tree
	$(call log_tool,$(CXX),$(log_compile)) $(CXXFLAGS_EXTRA) $(CXXFLAGS) -c -o '$@' '$<'


.PHONY: __build_tree
__build_tree: $(build_dir)
$(build_dir):
	$(suppress) test -d $@ || mkdir $@

-include $(build_dir)/*.d

define program_template
$$($1_bin): $$(call program_objects,$1)
	$$(call log_tool,$$(CXX),$$(log_link)) $$(LDFLAGS_EXTRA) $$(LDFLAGS) -o '$$@' $$(call program_objects,$1) $$(call program_libs,$1)
	
.PHONY: __clean_$1
clean: __clean_$1
__clean_$1:
	$$(suppress) rm -f $$($1_bin)
endef

define subdir_template
__build_tree: $$(build_dir)/$1
$$(build_dir)/$1: $$(dir $$(build_dir)/$1)
	$(suppress) test -d $$@ || mkdir $$@
endef


define library_template
$$($1_bin): $$(call program_objects,$1)
	$$(call log_tool,$$(CXX),$$(log_link)) $$(LDFLAGS_EXTRA) $$(LDFLAGS) -shared -o '$$@' $$(call program_objects,$1) $$(call program_libs,$1)
endef



program_objects       = $(addprefix $(build_dir)/,$(addsuffix .o,$(basename $($1_src))))
program_libs          = $(addprefix -l,$($1_lib))
define_program        = $(eval $(call program_template,$1))
define_library        = $(eval $(call library_template,$1))
define_subdir         = $(eval $(call subdir_template,$1))

clean:
	$(suppress) rm -rf '$(build_dir)'
